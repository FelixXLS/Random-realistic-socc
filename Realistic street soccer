local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

local PhantomForcesWindow = Library:NewWindow("FelixX  realistic street soccer")

local KillingCheats = PhantomForcesWindow:NewSection("No cooldown")

KillingCheats:CreateButton("Any dribble‚õπÔ∏è", function()

local args = {
    [1] = "Deke"
}

game:GetService("ReplicatedStorage").Remotes.Action:FireServer(unpack(args))
end)

KillingCheats:CreateButton("BicycleKickü¶µüö≤", function()

local args = {
    [1] = "BicycleKick"
}

game:GetService("ReplicatedStorage").Remotes.Action:FireServer(unpack(args))
end)

KillingCheats:CreateButton("Headerüó£Ô∏è", function()

local args = {
    [1] = "Header"
}

game:GetService("ReplicatedStorage").Remotes.Action:FireServer(unpack(args))
end)

local KillingCheats = PhantomForcesWindow:NewSection("Automatic")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local CollectRemote = Remotes:WaitForChild("Collect")

local numberToSend = 0 -- Inicializar la variable para almacenar el n√∫mero ingresado
local isAutoEzActive = false -- Variable para controlar el estado del toggle

-- Crear un cuadro de texto para ingresar el n√∫mero
KillingCheats:CreateTextbox("Reach ball ‚öΩ", function(text)
    -- Intentar convertir el texto a n√∫mero
    local number = tonumber(text)
    if number then
        numberToSend = number -- Si es un n√∫mero v√°lido, guardarlo en la variable
        print("N√∫mero establecido:", numberToSend)
    else
        print("Por favor, ingresa un n√∫mero v√°lido.")
    end
end)

-- Crear un toggle para "Auto Ez"
KillingCheats:CreateToggle("Auto reach ball‚öΩ", function(value)
    isAutoEzActive = value -- Actualizar el estado del toggle

    if value then
        -- Si el toggle est√° activado, ejecutar un ciclo
        while isAutoEzActive do
            wait(0) -- Esperar un segundo (ajustable)
            
            -- Enviar el n√∫mero ingresado
            CollectRemote:FireServer(numberToSend)
            print("Enviado n√∫mero:", numberToSend)
        end
    end
end)

local tspeed = 0
local minSpeed = 0
local maxSpeed = 100
local hb = game:GetService("RunService").Heartbeat
local tpwalking = true
local player = game:GetService("Players")
local lplr = player.LocalPlayer
local hum

local function isNumber(str)
    return tonumber(str) ~= nil or str == 'inf'
end

local function adjustSpeed(newSpeed)
    if isNumber(newSpeed) then
        local speedValue = tonumber(newSpeed)
        if speedValue < minSpeed then
            tspeed = minSpeed
        elseif speedValue > maxSpeed then
            tspeed = maxSpeed
        else
            tspeed = speedValue
        end
    end
end

local function setupCharacter()
    local chr = lplr.Character or lplr.CharacterAdded:Wait()
    hum = chr:WaitForChild("Humanoid")

    -- Reemplazo de input field por KillingCheats:CreateTextbox
    KillingCheats:CreateTextbox("Speed", function(text)
        adjustSpeed(text)
    end)

    -- Bucle de movimiento
    spawn(function() -- Usar spawn para permitir que el bucle funcione en paralelo
        while tpwalking and hb:Wait() and chr and hum and hum.Parent do
            if hum.MoveDirection.Magnitude > 0 then
                local adjustedSpeed = tspeed * 0.2  -- Aumenta el multiplicador para velocidad m√≠nima
                chr:TranslateBy(hum.MoveDirection * adjustedSpeed)
            end
        end
    end)
end

-- Configurar el personaje al iniciar
setupCharacter()

-- Conectar la funci√≥n al evento CharacterAdded
lplr.CharacterAdded:Connect(function()
    -- Esperar que el nuevo personaje se configure antes de ejecutar
    wait(0.5)  -- Espera un breve momento para asegurar que el personaje se cargue
    setupCharacter()
end)
